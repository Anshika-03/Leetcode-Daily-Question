class Solution {
    public int[] searchRange(int[] nums, int target) {
        int fir = findFirst(nums, target);
        int l = findLast(nums, target);
        return new int[]{fir, l};

    }
    private int findFirst(int[] nums, int target) {
      int s=0,e=nums.length-1;
      int fir=-1;
      while(s<=e){
        int mid=s+(e-s)/2;
        if(nums[mid]==target){
            fir=mid;
            e=mid-1;
        }
        else if(nums[mid]<target){
            s=mid+1;
        }
        else{
            e=mid-1;
        }
      }
      return fir;
    }
    private int findLast(int[] nums, int target){
        int s=0,e=nums.length-1;
        int l=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]==target){
                l=mid;
                s=mid+1;
            }
            else if(nums[mid]<target){
                s=mid+1;
            }
            else{
                e=mid-1;
            }
        }
        return l;
    }
    
}
